# With this file you can up viz node with nginx proxy and ssl sertificate.
# Parameter VERSION now can be: lowmem, mongo, production, testnet
#
# Usage example:
#
# VERSION=testnet \
# HOST=testnet.viz.cx \
# EMAIL=my@email.com \
# docker-compose -f share/vizd/docker/docker-compose.yml up -d
#

version: '2'

services:
  vizd:
    build:
      context: ../../../
      dockerfile: ./share/vizd/docker/Dockerfile-${VERSION}
    container_name: vizd
    restart: unless-stopped
    ports:
      - "2001:2001"
      - "8090:8090"
      - "8091:8091"
    networks:
      - viz-network
  
  vizcertbot:
    image: certbot/certbot
    container_name: viz-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email --staging --keep-until-expiring -d ${HOST}

  viznginx:
    image: nginx:mainline-alpine
    container_name: viz-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt-nginx.conf.template:/letsencrypt-nginx.conf.template
      - ./viz-nginx.conf.template:/viz-nginx.conf.template
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    networks:
      - viz-network
    environment:
      - HOST
      - PORT
    command: >
      sh -c "
      export DOLLAR_SIGN='$$';
      envsubst < letsencrypt-nginx.conf.template > /etc/nginx/nginx.conf;
      nginx -g 'daemon off;';
      sleep 10;
      envsubst < viz-nginx.conf.template > /etc/nginx/nginx.conf;
      nginx -s reload;
      "
    depends_on:
      - vizd
      - vizcertbot

volumes:
  certbot-etc:
  certbot-var:
  web-root:

networks:
  viz-network:
    driver: bridge
